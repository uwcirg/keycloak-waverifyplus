plugins {
	id 'java'
}

group = 'edu.uw.waverify'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	// Keycloak server dependencies for SPI development
	implementation 'org.keycloak:keycloak-server-spi:26.0.6'
	implementation 'org.keycloak:keycloak-services:26.0.6'

	// REST client for integration with mock-vp API
	implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
	implementation 'org.glassfish.jersey.core:jersey-client:3.1.0'

	// Spring framework for utilities
	implementation 'org.springframework:spring-context:6.0.0'

	// Logging dependencies
	implementation 'org.slf4j:slf4j-api:2.0.0'
	runtimeOnly 'ch.qos.logback:logback-classic:1.4.0'

	// Testing dependencies
	testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
	testImplementation 'org.mockito:mockito-core:5.14.2'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.14.2'
	testImplementation 'net.bytebuddy:byte-buddy:1.15.10'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.4'
}

tasks.test {
	var listArgs = new ArrayList<String>()
	listArgs.add("--add-opens=java.base/java.lang=ALL-UNNAMED")
	listArgs.add("--add-opens=java.base/java.lang.invoke=ALL-UNNAMED")
	setJvmArgs(listArgs)
	useJUnitPlatform()
}

jar {
	manifest {
		attributes(
				'Implementation-Title': 'Demographic Validation SPI',
				'Implementation-Version': version,
				'Keycloak-SPI': 'true'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
